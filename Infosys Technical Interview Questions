Question: What is SDLC?
Answer: Software Development Life Cycle (SDLC) is an end to end process that defines the flow of the development of a project
from requirements stage to the maintenance and support stage. The stages in SDLC are requirements analysis, planning, definition,
design, development, testing, deployment, and support (maintenance).

Question: Do you know what is waterfall model?
Answer: Just like waterfalls from top to bottom, this approach follows breaking down of project activities into different phases.
Once a stage is completed, the next stage in the sequence is followed. Each stage is dependent on the result of the previous stage.

Question: What is OOPS concept and how is it implemented in C++?
Answer: OOPS (or object-oriented programming) is a programming methodology where an application program is designed considering everything as objects. 
It makes programming easy.

The main oops concepts are –
Class – contains methods and variables. You can use a class by creating objects of the class.

Inheritance – when there are common properties that can be reused, we can create a parent class.
The child classes can then inherit the common methods and variables of the parent class. A very common example is the Animal class. If Dog and Lion are two different animals, 
they can inherit the common methods of Animal like run(), eat() or makeSound(). The sound of Dog and Lion are different, so each will have their own implementation.

Polymorphism – redefine the way the certain thing works using a different implementation. Polymorphism can be achieved using overloading and overriding.

Abstraction – for complex real-time programs, not all the details need to be shown to the user. 
Through abstraction, we can separate what an object does from how the object works and show only ‘what’ to the user.

Encapsulation – encapsulation is based on the concept of having the data and code into a single unit to hide the internal workings of the code to an end-user. 
For example, a class encapsulates several member variables and methods that may not be accessible outside the class.
